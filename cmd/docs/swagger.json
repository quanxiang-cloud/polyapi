{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server celler server.",
        "title": "Swagger Example API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "polyapi",
    "basePath": "/",
    "paths": {
        "/api/v1/polyapi/poly/enums": {
            "post": {
                "description": "list enums",
                "produces": [
                    "application/json"
                ],
                "summary": "list enums",
                "parameters": [
                    {
                        "description": "body parameters",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.PolyEnumReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return list of specify enum",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/resp.R"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/service.PolyEnumResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "resp.R": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/resp.resp"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "resp.resp": {
            "type": "object"
        },
        "service.PolyEnumElem": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "sample": {
                    "type": "object"
                },
                "view": {
                    "type": "string"
                }
            }
        },
        "service.PolyEnumReq": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "sample": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "service.PolyEnumResp": {
            "type": "object",
            "properties": {
                "enumType": {
                    "type": "string"
                },
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.PolyEnumElem"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "BasicAuth": {
            "type": "basic"
        },
        "OAuth2AccessCode": {
            "type": "oauth2",
            "flow": "accessCode",
            "authorizationUrl": "https://example.com/oauth/authorize",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information"
            }
        },
        "OAuth2Application": {
            "type": "oauth2",
            "flow": "application",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "write": " Grants write access"
            }
        },
        "OAuth2Implicit": {
            "type": "oauth2",
            "flow": "implicit",
            "authorizationUrl": "https://example.com/oauth/authorize",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "write": " Grants write access"
            }
        },
        "OAuth2Password": {
            "type": "oauth2",
            "flow": "password",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "read": " Grants read access",
                "write": " Grants write access"
            }
        }
    },
    "x-extension-openapi": {
        "example": "value on a json format"
    }
}